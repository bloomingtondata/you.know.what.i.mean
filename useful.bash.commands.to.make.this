time <glove.840B.300d.txt head -5600 | tail -22 | rms | nl | sort -k 3 -r
time 80000
 2172  echo "alias xbps-search='xbps-query -Rs'" | tee -a ~/.bash_aliases 
 4343  echo "ulimit -n 3333" | tee -a ~/.bashrc
 6096  echo cpulimit -l 50 <lengths.of.words_where.is.zero\? head -850000 | sort -k2 --parallel=8 >longest.shortest.words.in.their.31.dimensional.representation_840B.300d.glove | tee -a useful.bash.commands.to.make.this 
 6097  echo <lengths.of.words_where.is.zero\? sort -k2 --parallel=8 >longest.shortest.words.in.their.31.dimensional.representation_840B.300d.glove | tee -a useful.bash.commands.to.make.this 
 6146  echo <lengths.of.words_where.is.zero\? sort -k2 --parallel=8 >longest.shortest.words.in.their.31.dimensional.representation_840B.300d.glove | tee -a useful.bash.commands.to.make.this 
 6148  history | grep echo | grep tee
 6149  history | grep echo | grep tee | tee -a useful.bash.commands.to.make.this 
 5920  <glove.840B.300d.txt lok 'NF' | head
 5921  <glove.840B.300d.txt lok 'print NF' | head
 5922  <glove.840B.300d.txt lok '{print NF}' | head
 5923  <glove.840B.300d.txt lok 'NF!=301' | head
 5926  <glove.840B.300d.txt parallel -j0 lok 'NF!=301' | head
 5927  <glove.840B.300d.txt parallel --pipe -j0 lok 'NF!=301' | head
 5929  <glove.840B.300d.txt head -5000 |tail|  lok '{print $1}'
 5930  <glove.840B.300d.txt head -5000 |tail|  lok '{print $1; norm=0; for (d=2;d<=NF;d++) { norm += ($d*$d)  }; print $norm}'
 5931  <glove.840B.300d.txt head -5000 |tail|  lok '{print $1; norm=0; for (d=2;d<=NF;d++) { print ($d*$d)  }; print $norm}'
 5932  <glove.840B.300d.txt head -5000 |tail|  lok '{print $1; norm=0; for (d=2;d<=NF;d++) { print ($d*$d)  }}'
 5933  <glove.840B.300d.txt head -5000 |tail|  lok '{print $1; norm=0; for (d=2;d<=NF;d++) { print ($d*$d)  }}' |les
 5953  <glove.840B.300d.txt lok 'NF' | head
 5954  <glove.840B.300d.txt lok 'print NF' | head
 5955  <glove.840B.300d.txt lok '{print NF}' | head
 5956  <glove.840B.300d.txt lok 'NF!=301' | head
 5959  <glove.840B.300d.txt parallel -j0 lok 'NF!=301' | head
 5960  <glove.840B.300d.txt parallel --pipe -j0 lok 'NF!=301' | head
 5962  <glove.840B.300d.txt head -5000 |tail|  lok '{print $1}'
 5963  <glove.840B.300d.txt head -5000 |tail|  lok '{print $1; norm=0; for (d=2;d<=NF;d++) { norm += ($d*$d)  }; print $norm}'
 5964  <glove.840B.300d.txt head -5000 |tail|  lok '{print $1; norm=0; for (d=2;d<=NF;d++) { print ($d*$d)  }; print $norm}'
 5965  <glove.840B.300d.txt head -5000 |tail|  lok '{print $1; norm=0; for (d=2;d<=NF;d++) { print ($d*$d)  }}'
 5966  <glove.840B.300d.txt head -5000 |tail|  lok '{print $1; norm=0; for (d=2;d<=NF;d++) { print ($d*$d)  }}' |les
 6150  history | grep lok | tee -a useful.bash.commands.to.make.this 
<glove.6B head -$(($RANDOM))  | tail -1 | lok '{s=0; for (d=2;d<=NF;d++) {s+=$d*$d}} {print $1, s}'

paste <(<glove.6B head -$(($RANDOM)) | tail -1 | tr ' ' '\n')  <(<glove.6B head -$(($RANDOM)) | tail -1 | tr ' ' '\n')

#to get vectors side-by-side
paste <(<glove.6B head -$(($RANDOM)) | tail -1 | tr ' ' '\n')  <(<glove.6B head -$(($RANDOM)) | tail -1 | tr ' ' '\n')


#subtraction
paste <(<glove.6B head -$(($RANDOM)) | tail -1 | tr ' ' '\n')  <(<glove.6B head -$(($RANDOM)) | tail -1 | tr ' ' '\n') | body lok '{print $1-$2}'




# compare two random  vectors by standard inner product (geometric)

paste <(<glove.6B head -$(($RANDOM)) | tail -1 | tr ' ' '\n')  <(<glove.6B head -$(($RANDOM)) | tail -1 | tr ' ' '\n') | body lok '{print $1-$2}' | lok 'NR ==1 {s=0;print $1, "-", $2} NR!=1 {s+=$1*$1} END {print sqrt(s)}'


#R's t() function
# turn the rows sideways (Transpose)
#  so they can be subtracted easier

<glove.6B head -52387 | tail -2 | lok '{for (col=1;col<=NF;col++) {anything[NR,col]=$col}} ; END {for(formerlycolumn=1;formerlycolumn<=31;formerlycolumn++) print anything[1,formerlycolumn], anything[2,formerlycolumn]  }'




regina@scheherezade:~/yacc.learn/yacc.zach/you.know.what.i.mean$ <glove.6B head -52387 | tail -2 | turn | body subtract.vectors | body lok 'BEGIN {s=0}; {s+=$1*$1}; END {print sqrt(s)}'
gonsalves        sidhu
4.012


#working!


#yeah, really working

regina@scheherezade:~/yacc.learn/yacc.zach/you.know.what.i.mean$ cat <(<glove.6B head -$(($RANDOM)) | tail -1) <(<glove.6B head -$(($RANDOM)) | tail -1) | turn | body subtract.vectors | body rms.of.a.column | tee -a distance.between.two.random.words



#i clobbered the longest.shortest words so make it again
time <glove.840B.300d.txt parallel --sshdelay 0.2 -S 2/$S1,8/:,16/$S2,8/$S3,8/$S4 --pipe
"awk '{for(d=2;d<=NF;d++) s+=\$d*\$d; print \$1, s}'" | nl | sort --parallel=
8 --compress-program=pigz --key=3 --reverse >longest.shortest.words.in.their.
31.dimensional.representation_840B.300d.glove
